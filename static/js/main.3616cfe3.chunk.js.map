{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","className","s","StatisticsList","StatisticsItem","value","FeedbackOptions","options","onLeaveFeedback","FeedbackControls","map","option","type","btn","data-action","onClick","Section","title","children","App","useState","setGood","setNeutral","setBad","countTotalFeedback","target","dataset","action","state","totalFeedbackCount","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,eAAiB,mCAAmC,MAAQ,4B,mBCAlID,EAAOC,QAAU,CAAC,iBAAmB,0CAA0C,IAAM,+B,wJCCtE,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,ICEb,IA8BeC,EA9BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACGD,EAAQ,GACP,qBAAKE,UAAWC,IAAEP,WAAlB,SACE,qBAAIM,UAAWC,IAAEC,eAAjB,UACE,qBAAIF,UAAWC,IAAEE,eAAjB,kBACO,sBAAMH,UAAWC,IAAEG,MAAnB,SAA2BT,OAElC,qBAAIK,UAAWC,IAAEE,eAAjB,qBACU,sBAAMH,UAAWC,IAAEG,MAAnB,SAA2BR,OAErC,qBAAII,UAAWC,IAAEE,eAAjB,iBACM,sBAAMH,UAAWC,IAAEG,MAAnB,SAA2BP,OAEjC,qBAAIG,UAAWC,IAAEE,eAAjB,mBACQ,sBAAMH,UAAWC,IAAEG,MAAnB,SAA2BN,OAEnC,qBAAIE,UAAWC,IAAEE,eAAjB,+BAEE,uBAAMH,UAAWC,IAAEG,MAAnB,UAA2BL,EAA3B,eAKG,IAAVD,GAAe,cAACN,EAAD,CAAcC,QAAQ,0B,gBCT7BY,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKP,UAAWC,IAAEO,iBAAlB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SACLX,UAAWC,IAAEW,IACbC,cAAaH,EACbI,QAASP,EAJX,SAOGG,GAFIA,S,gBCTA,SAASK,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,sBAAKjB,UAAWC,IAAEc,QAAlB,UACE,6BAAKC,IACJC,KCDQ,SAASC,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBxB,EADqB,KACfyB,EADe,OAEED,mBAAS,GAFX,mBAErBvB,EAFqB,KAEZyB,EAFY,OAGNF,mBAAS,GAHH,mBAGrBtB,EAHqB,KAGhByB,EAHgB,KAwBtBC,EAAqB,WACzB,OAAO5B,EAAOC,EAAUC,GAU1B,OACE,qCACE,cAACkB,EAAD,CAASC,MAAO,wBAAhB,SACE,cAAC,EAAD,CAAiBV,QAjCP,CAAC,OAAQ,UAAW,OAiCKC,gBA/BlB,SAAC,GAEtB,OAFqC,EAAbiB,OACEC,QAAlBC,QAEN,IAAK,OACHN,GAAQ,SAAAO,GAAK,OAAIA,EAAQ,KACzB,MACF,IAAK,UACHN,GAAW,SAAAM,GAAK,OAAIA,EAAQ,KAC5B,MACF,IAAK,MACHL,GAAO,SAAAK,GAAK,OAAIA,EAAQ,KACxB,MACF,QACE,aAoBF,cAACZ,EAAD,CAASC,MAAO,aAAhB,SACE,cAAC,EAAD,CACErB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,IACPxB,mBAlBgC,WACtC,IAAM6B,EAAqBL,IAC3B,OAAOK,EACHC,KAAKC,MAAOnC,EAAOiC,EAAsB,KACzC,EAcsBG,UC/C9BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChB,EAAD,MAEFiB,SAASC,eAAe,W","file":"static/js/main.3616cfe3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatisticsList\":\"Statistics_StatisticsList__2KiUF\",\"StatisticsItem\":\"Statistics_StatisticsItem__3YPI_\",\"value\":\"Statistics_value__2eXJD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackControls\":\"FeedbackOptions_FeedbackControls__2jYkI\",\"btn\":\"FeedbackOptions_btn__1rp9P\"};","import PropTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nimport Notification from '../Notification/Notification';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      {total > 0 && (\n        <div className={s.Statistics}>\n          <ul className={s.StatisticsList}>\n            <li className={s.StatisticsItem}>\n              Good:<span className={s.value}>{good}</span>\n            </li>\n            <li className={s.StatisticsItem}>\n              Neutral:<span className={s.value}>{neutral}</span>\n            </li>\n            <li className={s.StatisticsItem}>\n              Bad:<span className={s.value}>{bad}</span>\n            </li>\n            <li className={s.StatisticsItem}>\n              Total:<span className={s.value}>{total}</span>\n            </li>\n            <li className={s.StatisticsItem}>\n              Positive feedback:\n              <span className={s.value}>{positivePercentage}%</span>\n            </li>\n          </ul>\n        </div>\n      )}\n      {total === 0 && <Notification message=\"No feedback given\" />}\n    </>\n  );\n};\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={s.FeedbackControls}>\n      {options.map(option => (\n        <button\n          type=\"button\"\n          className={s.btn}\n          data-action={option}\n          onClick={onLeaveFeedback}\n          key={option}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <div className={s.Section}>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element,\n};\n","import { useState } from 'react';\n\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const options = ['good', 'neutral', 'bad'];\n\n  const handleFeedback = ({ target }) => {\n    const { action } = target.dataset;\n    switch (action) {\n      case 'good':\n        setGood(state => state + 1);\n        break;\n      case 'neutral':\n        setNeutral(state => state + 1);\n        break;\n      case 'bad':\n        setBad(state => state + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const totalFeedbackCount = countTotalFeedback();\n    return totalFeedbackCount\n      ? Math.round((good / totalFeedbackCount) * 100)\n      : 0;\n  };\n\n  return (\n    <>\n      <Section title={'Please leave feedback'}>\n        <FeedbackOptions options={options} onLeaveFeedback={handleFeedback} />\n      </Section>\n      <Section title={'Statistics'}>\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}